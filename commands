type integer: int()

False (=0)

await (await asyncio.sleep(seconds))

else 	

import (import library)

pass

None (no data value)

break (break out of loop)

except 

in (for i in range(x,y), 

raise

True (=1)

class 

finally 

is 

return

and 

continue 

for 

lambda 

try

as 

def 

from 

nonlocal 

while

assert 

del 	

global

not 	

with

async 

elif 	

if 	

or 	

yield

print strings: print('') or print("")

integer: whole number

float: decimal number

store data: variable = something

which class: type()

to check if object belongs to class: isinstance(object, class)

list: list = [1, "keke"]

access from list, starting at 0: list[0] 

dictionary: d = {"key": value}



type conversion: 

integer to float: 



